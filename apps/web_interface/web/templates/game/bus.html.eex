<script>
  function count() {
  $('#score_points').val($('.busq input:checked').length);

    }

</script>
<div id="timer">
  <button onclick="start();">
    <i class="fa fa-play"></i>
  </button>
  <span id="time"></span>
  <button onclick="stop();">
    <i class="fa fa-stop"></i>
  </button>
</div>

<div class="busq">
  <input id="q1" type="checkbox" name="questions[]" class="busq-btn" value="1"/><label for="q1">Boekentassen hinderlijk stallen</label>
  <input id="q2" type="checkbox" name="questions[]" class="busq-btn" value="2"/><label for="q2">Ballenbad in afval</label>
  <input id="q3" type="checkbox" name="questions[]" class="busq-btn" value="3"/><label for="q3">Lawaaihinder - Gsm / Disco / Muziek</label>
  <input id="q4" type="checkbox" name="questions[]" class="busq-btn" value="4"/><label for="q4">Niemand doorlaten - Hinderen</label>
  <input id="q5" type="checkbox" name="questions[]" class="busq-btn" value="5"/><label for="q5">Over de banken lopen - staan</label>
  <input id="q6" type="checkbox" name="questions[]" class="busq-btn" value="6"/><label for="q6">Handtastelijkheden</label>
  <input id="q7" type="checkbox" name="questions[]" class="busq-btn" value="7"/><label for="q7">Roken</label>
  <input id="q8" type="checkbox" name="questions[]" class="busq-btn" value="8"/><label for="q8">Tags - Graffiti</label>
</div>
<%= form_for @conn, game_path(@conn, :create, @game, @participant), [as: :score, onsubmit: "count();"], fn f -> %>
<%= hidden_input f, :points %>
<%= hidden_input f, :time %>
<div class="form-group">
  <%= submit "Submit", class: "btn btn-primary", id: :submit%>
</div>
<% end %>

<script >

  var clsStopwatch = function() {
  // Private vars
  var startAt = 0;    // Time of last start / resume. (0 if not running)
  var lapTime = 0;    // Time on the clock when last stopped in milliseconds

  var now = function() {
  return (new Date()).getTime();
  };

  // Public methods
  // Start or resume
  this.start = function() {
  startAt = startAt ? startAt : now();
  };

  // Stop or pause
  this.stop = function() {
  // If running, update elapsed time otherwise keep it
  lapTime = startAt ? lapTime + now() - startAt : lapTime;
  startAt = 0; // Paused
  };

  // Reset
  this.reset = function() {
  lapTime = startAt = 0;
  };

  // Duration
  this.time = function() {
  return lapTime + (startAt ? now() - startAt : 0);
  };

  this.running = function() {
  return startAt != 0;
  }
  };

  var x = new clsStopwatch();
  var $time;
  var clocktimer;

  function pad(num, size) {
  var s = "0000" + num;
  return s.substr(s.length - size);
  }

  function formatTime(time) {
  var h = m = s = ms = 0;
  var newTime = '';

  h = Math.floor( time / (60 * 60 * 1000) );
  time = time % (60 * 60 * 1000);
  m = Math.floor( time / (60 * 1000) );
  time = time % (60 * 1000);
  s = Math.floor( time / 1000 );
  ms = time % 1000;

  newTime = pad(h, 2) + ':' + pad(m, 2) + ':' + pad(s, 2) + ':' + pad(ms, 3);
  return newTime;
  }

  function show() {
  $time = document.getElementById('time');
  update();
  }

  function update() {
  $time.innerHTML = formatTime(x.time());
  }

  function start() {
  clocktimer = setInterval("update()", 1);
  x.start();
  }

  function stop() {
  if(x.running()) {
  x.stop();
  clearInterval(clocktimer);
  score = document.getElementById('score_time');
  score.value = x.time();
  document.getElementById('submit').disabled = false;
  }
  }

  function reset() {
  stop();
  x.reset();
  update();
  }

  show();
</script>
